---
title: SSH
layout: doc-page
---

In order to access and modify your source code on PHP Fog, you'll need to generate an SSH key and add it to your PHP Fog account. This tutorial will walk you through that process for Mac OS X. 

### 1. First, make sure you don't have a key already.

    $ cd ~/.ssh

If you get "no such file or directory", create the directory: 

    $ mkdir ~/.ssh

Then, [skip ahead to "3. Generate Your Key"]().

### 2. Backup and remove existing SSH keys.

If the directory exists, check to see if you already have a keypair in it: 

    $ ls

If you don't see any files named "id_rsa" or "id_rsa.pub" [skip ahead to "3. Generate Your Key"](). 

If they exist, you'll you need to back them up by creating a new directory and moving those files there.

	$ mkdir key_backup
	$ mv id_rsa* key_backup/

### 3. Generate your key.

Run this command: 

    $ ssh-keygen -t rsa

Terminal will start the key generation process and you should see this:

    Generating public/private rsa key pair.

Terminal will prompt you for the name of the file in which to save the key.

	Enter file in which to save the key (/Users/PHPFog/.ssh/id_rsa):

When asked about the directory, we recommend using the default name and location (`id_rsa`).

Note: Git and other tools generally look for keys in the default directory, so using a different directory may have unintended consequences.

Just hit 'Enter' to use the default filename.

### 4. Enter a passphrase for your new key.

	Enter passphrase (empty for no passphrase):
	Enter same passphrase again:
	This password is used to protect the private key.

If the passphrases match, you'll generate a keypair.

	Your identification has been saved in /Users/PHPFog/.ssh/id_rsa.
	Your public key has been saved in /Users/PHPFog/.ssh/id_rsa.pub.
	The key fingerprint is:
	31:be:4f:13:d4:68:f1:43:ea:97:9b:33:ad:b6:e5:85 us@phpfog.com
	The key's randomart image is:
	+--[ RSA 2048]----+
	| . . |
	| B |
	| o = + |
	| . * o |
	| S o o |
	| . o + . |
	| . o = E .|
	| o ..* . |
	| ..o.. |
	+-----------------+

Note: On Windows the path "/Users/PHPFog/.ssh/" is going to be different.

### 5. Copy the public key and add it to your PHP Fog account.

Open your public key with a text editor and copy the entire text.

A real key will look like:

	ssh-rsa
	AAAAB3NzaC1yc2EAAAADAQABAAABAQDgMaD2kOEQAq0ir0C/U3880mFmpv
	K0/7/qaYx8Uu2GFnsBabIsPJttndqAl6/k1Du4c2s2S+Aem0qS+R4hbSDDuWqjZbEH
	ks5qiAjD64vCavRwl96pKk/bvNB4sCe0MTsrPEU0rzI/MFDkCp8UkwonJkDVGafkhGIu
	UtVrXlCd5JrZFUUvYmLQoLdiTTjCJeBlfG46VqdX2qg4LRN2tMWecYhXrb+ghXsk
	7MfVo+RGQ9pQsiozbd2oROWOsoy2XKPsE2wXXINMpHAg/r6XUzddkW3mAfLAJ
	D7Te78lX+AImxPYhOQccODJlswTTlxKNZuqa9znAGaiyf1pYigHLVD5
	us@phpfog.com

Now log in to the PHP Fog App Console and click on the "SSH Keys" tab. Hit the "Add another SSH key" button and paste the public key into the "SSH Public Key" field, give it a name, and hit "Save Changes".

That's it, you've generated a new SSH key and added it to PHP Fog!


## Handling Multiple SSH Keys for a Single Account

Sometimes you need to give more than one person SSH access to your PHP Fog git repository. Fortunately, adding more SSH keys to your account is easy. 

Just go to your PHP Fog account, click on the "SSH Keys" tab, and hit the "Add another SSH key" button. 

Give the new key a name, paste in the contents of the public key, hit "Save SSH Key", and you're done!

## Handling SSH Keys for Multiple Accounts

Sometimes you need SSH access to multiple PHP Fog accounts. Unfortunately, you can't use the same key with multiple accounts, so you'll have to generate a new key for each account you want access to. 

If you don't have any SSH keys set up with PHP Fog yet, head to the top of this page and follow the guide on creating and adding an SSH key. If you already have one set up, read on:

### 1. Generate a second key.

In your terminal application, make the following commands:

    $ cd ~/.ssh
    $ ssh-keygen -t rsa

You should see something like this:

    Generating public/private rsa key pair.
	Enter file in which to save the key (/Users/<your username>/.ssh/id_rsa): 

That filename should already be taken by your first key, so enter this one instead:

	/Users/<your username>/.ssh/id_rsa_1 

After you enter your passphrase (twice), you should see output that looks like this: 

	Your identification has been saved in /Users/<your username>/.ssh/id_rsa_1.
	Your public key has been saved in /Users/<your username>/.ssh/id_rsa_1.pub.
	The key fingerprint is:
	fc:c2:61:19:ed:49:ff:df:fb:e8:0c:46:4a:96:dc:2d <your username>@<your computer's name>
	The key's randomart image is:
	+--[ RSA 2048]----+
	|                 |
	|         .       |
	|        . o      |
	|       . * = .   |
	|        S B E .  |
	|       o = o o   |
	|        o o o .  |
	|         . . o o.|
	|             .+.*|
	+-----------------+

Finally, run the following:

	$ ssh-add ~/.ssh/id_rsa_1

### 2. Add your new SSH key to the second account.

Now go to your PHP Fog account, click on the "SSH Keys" tab, and hit the "Add another SSH key" button. 

Give the new key a name, paste in the contents of the public key, and hit "Save SSH Key".

### 3. Edit your SSH configuration file.

Open "`~/.ssh/config`" in your favorite text editor.

	$ vim ~/.ssh/config

Note: You might have to create this file if it doesn't exist already.

Add the following to the config file: 

	# Default PHP Fog user (name)
	Host phpfog
	HostName git01.phpfog.com
	User git
	IdentityFile /Users/<your username>/.ssh/id_rsa

	# 2nd PHP Fog user (name2)
	Host phpfog-1
	HostName git01.phpfog.com
	User git
	IdentityFile /Users/<your username>/.ssh/id_rsa_1

Save and quit. 

### 4. Your new git workflow.

From now on, you'll have to modify the way you interact with PHP Fog git repositories slightly. Because you have multiple hosts, you'll have to specify the host's name when you work with these remote repositories. For example:

To clone your first app:

	git clone git@phpfog:<your app's git repository>

And your second:

	git clone git@phpfog-1:<your second app's git repository>
