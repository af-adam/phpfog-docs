<<<<<<< HEAD
#
# Apache/PHP/Drupal settings:
#

# Protect files and directories from prying eyes.
<FilesMatch "\.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$">
  Order allow,deny
</FilesMatch>

# Don't show directory listings for URLs which map to a directory.
Options -Indexes

# Follow symbolic links in this directory.
Options +FollowSymLinks

# Make Drupal handle any 404 errors.
ErrorDocument 404 /index.php

# Set the default handler.
DirectoryIndex index.php index.html index.htm

# Override PHP settings that cannot be changed at runtime. See
# sites/default/default.settings.php and drupal_initialize_variables() in
# includes/bootstrap.inc for settings that can be changed at runtime.

# PHP 5, Apache 1 and 2.
<IfModule mod_php5.c>
  php_flag magic_quotes_gpc                 off
  php_flag magic_quotes_sybase              off
  php_flag register_globals                 off
  php_flag session.auto_start               off
  php_value mbstring.http_input             pass
  php_value mbstring.http_output            pass
  php_flag mbstring.encoding_translation    off
</IfModule>

# Requires mod_expires to be enabled.
<IfModule mod_expires.c>
  # Enable expirations.
  ExpiresActive On

  # Cache all files for 2 weeks after access (A).
  ExpiresDefault A1209600

  <FilesMatch \.php$>
    # Do not allow PHP scripts to be cached unless they explicitly send cache
    # headers themselves. Otherwise all scripts would have to overwrite the
    # headers set by mod_expires if they want another caching behavior. This may
    # fail if an error occurs early in the bootstrap process, and it may cause
    # problems if a non-Drupal PHP file is installed in a subdirectory.
    ExpiresActive Off
  </FilesMatch>
</IfModule>

# Various rewrite rules.
<IfModule mod_rewrite.c>
  RewriteEngine on

  # Block access to "hidden" directories whose names begin with a period. This
  # includes directories used by version control systems such as Subversion or
  # Git to store control files. Files whose names begin with a period, as well
  # as the control files used by CVS, are protected by the FilesMatch directive
  # above.
  #
  # NOTE: This only works when mod_rewrite is loaded. Without mod_rewrite, it is
  # not possible to block access to entire directories from .htaccess, because
  # <DirectoryMatch> is not allowed here.
  #
  # If you do not have mod_rewrite installed, you should remove these
  # directories from your webroot or otherwise protect them from being
  # downloaded.
  RewriteRule "(^|/)\." - [F]

  # If your site can be accessed both with and without the 'www.' prefix, you
  # can use one of the following settings to redirect users to your preferred
  # URL, either WITH or WITHOUT the 'www.' prefix. Choose ONLY one option:
  #
  # To redirect all users to access the site WITH the 'www.' prefix,
  # (http://example.com/... will be redirected to http://www.example.com/...)
  # uncomment the following:
  # RewriteCond %{HTTP_HOST} !^www\. [NC]
  # RewriteRule ^ http://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
  #
  # To redirect all users to access the site WITHOUT the 'www.' prefix,
  # (http://www.example.com/... will be redirected to http://example.com/...)
  # uncomment the following:
  # RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  # RewriteRule ^ http://%1%{REQUEST_URI} [L,R=301]

  # Modify the RewriteBase if you are using Drupal in a subdirectory or in a
  # VirtualDocumentRoot and the rewrite rules are not working properly.
  # For example if your site is at http://example.com/drupal uncomment and
  # modify the following line:
  # RewriteBase /drupal
  #
  # If your site is running in a VirtualDocumentRoot at http://example.com/,
  # uncomment the following line:
  # RewriteBase /

  # Pass all requests not referring directly to files in the filesystem to
  # index.php. Clean URLs are handled in drupal_environment_initialize().
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_URI} !=/favicon.ico
  RewriteRule ^ index.php [L]

  # Rules to correctly serve gzip compressed CSS and JS files.
  # Requires both mod_rewrite and mod_headers to be enabled.
  <IfModule mod_headers.c>
    # Serve gzip compressed CSS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.css $1\.css\.gz [QSA]

    # Serve gzip compressed JS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.js $1\.js\.gz [QSA]

    # Serve correct content types, and prevent mod_deflate double gzip.
    RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]
    RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]

    <FilesMatch "(\.js\.gz|\.css\.gz)$">
      # Serve correct encoding type.
      Header set Content-Encoding gzip
      # Force proxies to cache gzipped & non-gzipped css/js files separately.
      Header append Vary Accept-Encoding
    </FilesMatch>
  </IfModule>
</IfModule>
=======
DirectoryIndex index.html index.xml index.php

# Redirect old doc URLs

redirect 301 /features/article/getting_started_custom_application /getting-started/ssh/
redirect 301 /features/article/getting_started_pf_command_line /getting-started/pf-command-line-tool/
redirect 301 /features/article/caching_with_apc /best-practices/caching#apc
redirect 301 /features/article/composer /getting-started/git#composer
redirect 301 /features/article/generating_a_ssh_key /getting-started/ssh/
redirect 301 /features/article/gitignore /getting-started/git#gitignore
redirect 301 /features/article/handling_multiple_ssh_keys /getting-started/ssh#multiple
redirect 301 /features/article/handling_large_static_assets /best-practices/storage/
redirect 301 /features/article/changing_file_folder_permissions /customize/permissions/
redirect 301 /features/article/pf_command_line_tool /getting-started/pf-command-line-tool/
redirect 301 /features/article/custom_ssl /customize/ssl/
redirect 301 /features/article/scaling_your_application /best-practices/scaling/
redirect 301 /features/article/sending_email /customize/email/
redirect 301 /features/article/set_php.ini_values_using_.htaccess_and_set_ini /customize/php_ini/
redirect 301 /features/article/setup_dns_records /customize/custom-domain-names/
redirect 301 /features/article/shared_vs_dedicated /faqs/#sharedvdedicated
redirect 301 /features/article/tips_and_tricks /best-practices/
redirect 301 /features/article/troubleshooting_http_500_errors /troubleshooting/#500
redirect 301 /features/article/troubleshooting_timeouts /troubleshooting/#500
redirect 301 /features/article/what_you_need_to_know /best-practices/
redirect 301 /features/article/working_around_limitations /best-practices/
redirect 301 /features/article/faq /faqs/
redirect 301 /features/article/faq_billing /billing/
redirect 301 /features/article/database /customize/database/
redirect 301 /features/article/faq_how_reliable_is_php_fog /reliability/
redirect 301 /features/article/faq_git_and_ssh /getting-started/git/
redirect 301 /features/article/amazon_rds /customize/database#third-party-databases
redirect 301 /features/article/amazon_s3 /best-practices/storage/
redirect 301 /features/article/caching /best-practices/caching/
redirect 301 /features/article/blitz /addons/blitz
redirect 301 /features/article/cleardb /addons/cleardb
redirect 301 /features/article/cloudmailin /addons/cloudmailin
redirect 301 /features/article/ironmq /addons/ironmq
redirect 301 /features/article/ironworker /addons/ironworker
redirect 301 /features/article/mailgun /addons/mailgun
redirect 301 /features/article/mongohq /addons/mongohq
redirect 301 /features/article/mongolab /addons/mongolab
redirect 301 /features/article/new_relic /addons/newrelic
redirect 301 /features/article/supported_frameworks http://www.phpfog.com/jumpstarts
redirect 301 /customize/addons http://www.phpfog.com/addons

# redirect 301 /features/article/facebook 
# redirect 301 /features/article/migrate_your_wordpress_blog_to_php_fog 
# redirect 301 /features/article/upgrading_wordpress 

Options +FollowSymlinks
RewriteEngine On
DirectorySlash Off

# Append trailing slash to directories
RewriteCond %{REQUEST_FILENAME} -d
RewriteCond %{REQUEST_URI} !(.*)/$
RewriteRule ^_site/(.*)$ http://%{HTTP_HOST}/$1/ [L,R=301]

# Remove .html extension
RewriteCond %{THE_REQUEST} ^(GET|HEAD)\ /.+\.html\ HTTP
RewriteRule ^_site/(.+)\.html$ http://%{HTTP_HOST}/$1/ [R=301,L]

# add .html file extension (if such file does exist)
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME}.html -f
RewriteRule ^.+$ %{REQUEST_FILENAME}.html [L]
>>>>>>> 20dc12e95f31803c2fad2e946f7d0283ce2b1030
